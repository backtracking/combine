
### the 12 pentaminos #########################################################
### see for instance http://fr.wikipedia.org/wiki/Pentamino

pattern I = {
*****
}

pattern V = {
***
*
*
}

pattern Z = {
.**
.*
**
}

pattern P = {
***
**
}

pattern N = {
***.
..**
}

pattern W = {
.**
**
*
}

pattern Y = {
****
.*
}

pattern T = {
***
.*
.*
}

pattern F = {
.**
**
.*
}

pattern U = {
***
*.*
}

pattern L = {
****
*
}
pattern X = {
.*.
***
.*.
}

tiles pentaminos =
[ L ~one ~sym, T ~one ~sym, V ~one ~sym, N ~one ~sym,
  Z ~one ~sym, F ~one ~sym, X ~one ~sym, W ~one ~sym,
  P ~one ~sym, I ~one ~sym, Y ~one ~sym, U ~one ~sym ]

### Scott's pentaminos problem #############################################
### we eliminate the symetries of the problem by using only one
### orientation of pentamino F

pattern scott_board = {
********
********
********
***..***
***..***
********
********
********
}

problem scott_problem = scott_board
[ L ~one ~sym, T ~one ~sym, V ~one ~sym, N ~one ~sym,
  Z ~one ~sym, F ~one     , X ~one ~sym, W ~one ~sym,
  P ~one ~sym, I ~one ~sym, Y ~one ~sym, U ~one ~sym ]

#print scott_problem

timing on
count dlx scott_problem

solve dlx scott_problem svg "test.svg"

#problem problem_23 = {
#********
#********
#***..***
#***..***
#********
#********
#********
#********
#} pentaminos

#problem problem_00 = {
#..******
#..******
#********
#********
#********
#********
#********
#********
#} pentaminos





